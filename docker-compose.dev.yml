services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  db:
    container_name: db-dev
    image: postgres:17-alpine
    env_file:
      - .env.dev
    ports:
      - 5432:5432
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    volumes:
      - "./backend:/app"
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: always
    # env_file:
    #   - "./frontend/.env.local"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - POLLING_INTERVAL=1
    ports:
      - 3001:80
    networks:
      - app-network
    volumes:
      - "./frontend/:/app"
      - /app/node_modules

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  postgres_db: {}
